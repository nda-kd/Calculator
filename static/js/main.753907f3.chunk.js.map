{"version":3,"sources":["Components/LCD/LCD.tsx","Redux/Actions/action.ts","Components/Keypad/Keypad.tsx","Components/container/Container.tsx","App.tsx","reportWebVitals.ts","Redux/Reducer/reducer.ts","index.tsx"],"names":["LCD","ActionKind","displayResult","useSelector","state","displayRecords","id","className","KeyPad","displayResultDispatch","useDispatch","displayRecordsDispatch","useState","number","setNumber","operand","setOperand","operation","setOperation","displayState","numberOnClick","num","type","DisplayResult","payload","calculate","acc","newArr","splice","length","parseFloat","toString","operationOnClick","op","DisplayRecords","onClick","percent","parseInt","percentOnClick","equalOnClick","Container","App","viewBox","xmlns","style","position","width","height","left","fill","d","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducer","action","lastOpreatorIs","split","recordLength","includes","Operation","Store","createStore","Reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.753907f3.chunk.js","sourcesContent":["import \"./LCD.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface RootState {\r\n  displayResult: string;\r\n  displayRecords: string;\r\n}\r\n\r\nfunction LCD() {\r\n\r\n  const displayResult = useSelector((state: RootState) => state.displayResult);\r\n  const displayRecords = useSelector(\r\n    (state: RootState) => state.displayRecords\r\n  );\r\n\r\n  return (\r\n    <div id=\"display\" className=\"LCD-wrap\">\r\n      <div className=\"records\">{displayRecords}</div>\r\n      <div className=\"result\">{displayResult ? displayResult : \"0\" }</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LCD;\r\n","export enum ActionKind {\r\n  DisplayResult = \"DISPLAY_RESULT\",\r\n  DisplayRecords = \"DISPALY_RECORDS\",\r\n  Operation = \"OPERATION_SET\",\r\n}\r\n\r\ntype Action = {\r\n  type: ActionKind;\r\n  payload: any;\r\n};\r\n\r\nexport const displayChange = (displayResult: string): Action => ({\r\n  type: ActionKind.DisplayResult,\r\n  payload: displayResult,\r\n});\r\n\r\nexport const displayRecordsShow = (displayRecords: string): Action => ({\r\n  type: ActionKind.DisplayRecords,\r\n  payload: displayRecords,\r\n});\r\n\r\nexport const operationSet = (operation: string): Action => ({\r\n  type: ActionKind.Operation,\r\n  payload: operation,\r\n});\r\n","import \"./Keypad.scss\";\r\nimport { ActionKind } from \"../../Redux/Actions/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\ninterface RootState {\r\n  displayResult: string;\r\n}\r\n\r\nfunction KeyPad() {\r\n  const displayResultDispatch = useDispatch();\r\n  const displayRecordsDispatch = useDispatch();\r\n  // const operationDispatch = useDispatch();\r\n\r\n  const [number, setNumber] = useState(\"\");\r\n  const [operand, setOperand] = useState<string>(\"\");\r\n  const [operation, setOperation] = useState<string[]>([]);\r\n\r\n  const displayState = useSelector((state: RootState) => state.displayResult);\r\n\r\n  const ClearLCD = () => {\r\n    displayResultDispatch({ type: ActionKind.DisplayResult, payload: \"C\" });\r\n    displayRecordsDispatch({ type: ActionKind.DisplayRecords, payload: \"C\" });\r\n    setNumber(\"\");\r\n    setOperand(\"\");\r\n    setOperation([]);\r\n  };\r\n\r\n  const numberOnClick = (num: string) => {\r\n    if (num === \".\" && displayState === \"\") {\r\n      displayResultDispatch({\r\n        type: ActionKind.DisplayResult,\r\n        payload: \"0\",\r\n      });\r\n    }\r\n\r\n    if (num === \"0\" && displayState === \"\") {\r\n    } else {\r\n      displayResultDispatch({ type: ActionKind.DisplayResult, payload: num });\r\n    }\r\n    setNumber(number + num);\r\n  };\r\n\r\n  const calculate = () => {\r\n    var acc;\r\n    var newArr: any[] = [];\r\n\r\n    newArr = operation.splice(0, operation.length);\r\n\r\n    if (newArr.length >= 2 && newArr[newArr.length - 1] === \"-\") {\r\n      switch (newArr[newArr.length - 2]) {\r\n        case \"+\":\r\n          acc = parseFloat(operand) + -parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        case \"-\":\r\n          acc = parseFloat(operand) - -parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        case \"/\":\r\n          acc = parseFloat(operand) / -parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        case \"*\":\r\n          acc = parseFloat(operand) * -parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        default:\r\n          acc = \"\";\r\n          setOperand(acc);\r\n          return acc;\r\n      }\r\n    } else {\r\n      switch (newArr[newArr.length - 1]) {\r\n        case \"+\":\r\n          acc = parseFloat(operand) + parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        case \"-\":\r\n          acc = parseFloat(operand) - parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        case \"/\":\r\n          acc = parseFloat(operand) / parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        case \"*\":\r\n          acc = parseFloat(operand) * parseFloat(number);\r\n          setOperand(acc.toString());\r\n          return acc.toString();\r\n\r\n        default:\r\n          acc = \"\";\r\n          setOperand(acc);\r\n          return acc;\r\n      }\r\n    }\r\n  };\r\n\r\n  const operationOnClick = (op: string) => {\r\n    if (number) {\r\n      displayRecordsDispatch({\r\n        type: ActionKind.DisplayRecords,\r\n        payload: number,\r\n      });\r\n      setOperand(number);\r\n    }\r\n\r\n    if (operand && number) {\r\n      let acc: string = calculate();\r\n      displayResultDispatch({ type: ActionKind.DisplayResult, payload: \"C\" });\r\n      displayResultDispatch({\r\n        type: ActionKind.DisplayResult,\r\n        payload: acc.toString(),\r\n      });\r\n      setOperation([]);\r\n    } else if (!operand && !number && !displayState) {\r\n      setOperand(\"0\");\r\n    }\r\n\r\n    displayRecordsDispatch({ type: ActionKind.DisplayRecords, payload: op });\r\n    setOperation([...operation, op]);\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const percentOnClick = () => {\r\n    if (displayState) {\r\n      let percent: string = (parseInt(displayState) / 100).toString();\r\n      displayResultDispatch({ type: ActionKind.DisplayResult, payload: \"C\" });\r\n      displayResultDispatch({\r\n        type: ActionKind.DisplayResult,\r\n        payload: percent,\r\n      });\r\n      setNumber(percent);\r\n    }\r\n  };\r\n\r\n  const equalOnClick = () => {\r\n    if (operand && number) {\r\n      let acc: string = calculate();\r\n      displayRecordsDispatch({ type: ActionKind.DisplayRecords, payload: \"C\" });\r\n      displayResultDispatch({ type: ActionKind.DisplayResult, payload: \"C\" });\r\n      displayResultDispatch({\r\n        type: ActionKind.DisplayResult,\r\n        payload: acc,\r\n      });\r\n      setNumber(acc);\r\n      setOperand(\"\");\r\n    } else {\r\n      displayResultDispatch({ type: ActionKind.DisplayResult, payload: \"C\" });\r\n      displayResultDispatch({\r\n        type: ActionKind.DisplayResult,\r\n        payload: displayState,\r\n      });\r\n      setOperation([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"keypad-wrap\">\r\n      <div className=\"button-wrap\">\r\n        <button id=\"clear\" onClick={ClearLCD}>\r\n          AC\r\n        </button>\r\n        <button id=\"percent\" onClick={() => percentOnClick()}>\r\n          %\r\n        </button>\r\n        <button id=\"divide\" onClick={() => operationOnClick(\"/\")}>\r\n          /\r\n        </button>\r\n        <button id=\"one\" onClick={() => numberOnClick(\"1\")}>\r\n          1\r\n        </button>\r\n        <button id=\"two\" onClick={() => numberOnClick(\"2\")}>\r\n          2\r\n        </button>\r\n        <button id=\"three\" onClick={() => numberOnClick(\"3\")}>\r\n          3\r\n        </button>\r\n        <button id=\"multiply\" onClick={() => operationOnClick(\"*\")}>\r\n          x\r\n        </button>\r\n\r\n        <button id=\"four\" onClick={() => numberOnClick(\"4\")}>\r\n          4\r\n        </button>\r\n        <button id=\"five\" onClick={() => numberOnClick(\"5\")}>\r\n          5\r\n        </button>\r\n        <button id=\"six\" onClick={() => numberOnClick(\"6\")}>\r\n          6\r\n        </button>\r\n        <button id=\"add\" onClick={() => operationOnClick(\"+\")}>\r\n          +\r\n        </button>\r\n\r\n        <button id=\"seven\" onClick={() => numberOnClick(\"7\")}>\r\n          7\r\n        </button>\r\n        <button id=\"eight\" onClick={() => numberOnClick(\"8\")}>\r\n          8\r\n        </button>\r\n        <button id=\"nine\" onClick={() => numberOnClick(\"9\")}>\r\n          9\r\n        </button>\r\n        <button id=\"subtract\" onClick={() => operationOnClick(\"-\")}>\r\n          -\r\n        </button>\r\n\r\n        <button id=\"zero\" onClick={() => numberOnClick(\"0\")}>\r\n          0\r\n        </button>\r\n        <button id=\"decimal\" onClick={() => numberOnClick(\".\")}>\r\n          .\r\n        </button>\r\n        <button id=\"equals\" onClick={() => equalOnClick()}>\r\n          {\" \"}\r\n          ={\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeyPad;\r\n","import React from \"react\";\r\nimport \"./Container.scss\";\r\nimport LCD from \"../LCD/LCD\";\r\nimport KeyPad from \"../Keypad/Keypad\";\r\n\r\nfunction Container() {\r\n  return (\r\n    <div className=\"container-wrap\">\r\n      <div className=\"inside\">\r\n        <LCD />\r\n        <KeyPad />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import \"./App.css\";\nimport Container from \"./Components/container/Container\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <svg\n        viewBox=\"0 0 200 200\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          left: \"0\",\n        }}\n      >\n        <path\n          fill=\"#eff3fa\"\n          d=\"M44.1,-76.5C58,-68.5,70.5,-58.2,77.7,-45.1C85,-32,86.9,-16,87.4,0.3C87.8,16.5,86.7,33,79.3,45.8C72,58.7,58.3,68,44,74.9C29.7,81.9,14.9,86.6,-0.4,87.2C-15.6,87.9,-31.2,84.4,-45.6,77.6C-60,70.7,-73.3,60.3,-81.9,46.8C-90.5,33.3,-94.4,16.6,-92.7,1C-91,-14.6,-83.5,-29.3,-74.9,-42.7C-66.3,-56.2,-56.5,-68.5,-43.8,-77.2C-31.1,-85.9,-15.6,-90.9,-0.2,-90.6C15.2,-90.2,30.3,-84.5,44.1,-76.5Z\"\n          transform=\"translate(100 100)\"\n        />\n      </svg>\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionKind } from \"../Actions/action\";\r\n\r\ntype Action = {\r\n  type: ActionKind;\r\n  payload: any;\r\n};\r\n\r\ntype state = {\r\n  displayResult: string;\r\n  displayRecords: string;\r\n  operation: string[];\r\n};\r\n\r\nconst initState: state = {\r\n  displayResult: \"\",\r\n  displayRecords: \"\",\r\n  operation: [],\r\n};\r\n\r\nfunction reducer(state = initState, action: Action): state {\r\n  const lastOpreatorIs = state.displayRecords.split(\" \");\r\n\r\n  switch (action.type) {\r\n    case ActionKind.DisplayResult:\r\n      if (action.payload === \"C\") {\r\n        return {\r\n          ...state,\r\n          displayResult: \"\",\r\n        };\r\n      } else {\r\n        const recordLength = lastOpreatorIs.length - 1;\r\n        if (\r\n          lastOpreatorIs[recordLength] === \"-\" ||\r\n          lastOpreatorIs[recordLength] === \"+\" ||\r\n          lastOpreatorIs[recordLength] === \"/\" ||\r\n          lastOpreatorIs[recordLength] === \"*\"\r\n        ) {\r\n          return {\r\n            ...state,\r\n            displayResult: action.payload,\r\n            displayRecords: state.displayRecords + \" \",\r\n          };\r\n        } else {\r\n          if (state.displayResult.includes(\".\") && action.payload === \".\") {\r\n            return {\r\n              ...state,\r\n              displayResult: state.displayResult,\r\n            };\r\n          } else {\r\n            return {\r\n              ...state,\r\n              displayResult: state.displayResult + action.payload,\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n    case ActionKind.DisplayRecords:\r\n      if (action.payload === \"C\") {\r\n        return {\r\n          ...state,\r\n          displayRecords: \"\",\r\n        };\r\n      } else {\r\n        if (\r\n          (action.payload === \"+\" ||\r\n            action.payload === \"-\" ||\r\n            action.payload === \"/\" ||\r\n            action.payload === \"*\") &&\r\n          (state.displayResult === \"0\" || state.displayResult === \"\")\r\n        ) {\r\n          return {\r\n            ...state,\r\n            displayRecords: 0 + \" \" + action.payload,\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            displayRecords: state.displayRecords + \" \" + action.payload,\r\n          };\r\n        }\r\n      }\r\n\r\n    case ActionKind.Operation:\r\n      if (action.payload === \"C\") {\r\n        return {\r\n          ...state,\r\n          operation: [],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          operation: [...state.operation, action.payload],\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Reducer from \"./Redux/Reducer/reducer\";\n\nconst Store = createStore(Reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}